---
// Your main page (e.g., src/pages/promptsoncanvas/index.astro)
import Layout from '../../components/Layout.astro';
import Frame from '../../components/Frame.astro';
const base = import.meta.env.BASE_URL;

const mdPostsGlob = import.meta.glob('../../content/promptsoncanvas/*.md', { eager: true });
const mdxPostsGlob = import.meta.glob('../../content/promptsoncanvas/*.mdx', { eager: true });

const allPosts = [...Object.values(mdPostsGlob), ...Object.values(mdxPostsGlob)] as any[];
const sortedPosts = allPosts
  .sort((a: any, b: any) => new Date(b.frontmatter.date).getTime() - new Date(a.frontmatter.date).getTime())
  .map(post => {
    const slug = post.file.split('/').pop()?.replace(/\.(md|mdx)$/, '');
    return {
      ...post,
      url: `/promptsoncanvas/${slug}`
    }
  });
---

<Layout title="Prompts on Canvas" description="Masterpieces of generative art.">
  <div class="blog-page">
    <header class="blog-header">
      <h1 class="blog-title">Prompts on Canvas</h1>
      <p class="blog-description">
        Masterpieces of generative art
      </p>
      <hr class="blog-rule" />
    </header>

    {sortedPosts.length > 0 ? (
      <div class="posts-container">
        {sortedPosts.map((post: any) => {
          const { Content } = post;
          return (
            <div class="post-item">
              <a href={post.url} class="frame-link">
                <Frame prompt={post} Content={Content} />
              </a>
              <div class="caption">
                <p class="caption-title">{post.frontmatter.title}</p>
              </div>
            </div>
          );
        })}
      </div>
    ) : (
      <div class="no-posts">
        <p>No posts available yet. Start writing by creating files in <code>src/content/promptsoncanvas/</code></p>
      </div>
    )}
  </div>
</Layout>

<style>
  .blog-page {
    max-width: 1600px;
    margin: 0 auto;
    padding: 0 2rem;
  }

  .blog-header {
    text-align: center;
    margin-bottom: calc(var(--grid-unit) * 5);
  }

  .blog-title {
    font-family: var(--font-heading-primary);
    font-size: 3.5rem;
    font-weight: 900;
    color: var(--color-accent);
    text-transform: uppercase;
    letter-spacing: 0.05em;
    line-height: 1.1;
    margin-bottom: calc(var(--grid-unit) * 2);
  }

  .blog-description {
    font-size: 1.25rem;
    line-height: 1.6;
    color: var(--color-text-secondary);
    margin-bottom: calc(var(--grid-unit) * 3);
    max-width: 600px;
    margin-left: auto;
    margin-right: auto;
  }

  .blog-rule {
    height: 4px;
    background-color: var(--color-accent);
    border: none;
    width: 120px;
    margin: 0 auto;
    margin-bottom: calc(var(--grid-unit) * 4); 
  }

  .posts-container {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
    gap: calc(var(--grid-unit) * 6);
  }

  .post-item {
    display: flex;
    flex-direction: column;
  }

  .frame-link {
    display: block;
    width: 100%;
    text-decoration: none;
    color: inherit;
    transition: transform 0.2s ease-out;
    margin-bottom: calc(var(--grid-unit) * 2);
  }
  
  .frame-link:hover {
      transform: scale(1.03);
  }

  .caption {
    text-align: center;
  }
  
  .caption-title {
    font-weight: bold;
    font-size: 0.9rem;
    color: var(--color-text-secondary);
  }

  .no-posts {
    text-align: center;
    padding: calc(var(--grid-unit) * 6);
  }
</style>